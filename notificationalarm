{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "MULTICULTURAL CRAWLING",
      "provenance": [],
      "authorship_tag": "ABX9TyOGu3X0AAMcblb2owWnGDP3",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/jaeus/PythonforFun---Toy_Project/blob/master/notificationalarm\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dOJ720f2NWUm",
        "outputId": "c36b71df-f572-41eb-e633-370b8c35471f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        }
      },
      "source": [
        "import pandas as pds\n",
        "import requests as rq\n",
        "from bs4 import BeautifulSoup as bs\n",
        "import webbrowser as wb\n",
        "import os\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "noticeboardurl = 'https://www.liveinkorea.kr/center/board/ctpg/boardList.do?menuSeq=171&boardSeq=25&centerSeq=84'\n",
        "noticeboardid = 'div.tbl_type1_wrap'\n",
        "articledateid = 'ul.date_search'\n",
        "articletitleid = 'span.title'\n",
        "\n",
        "def articlecrawling(url, htmlid, dateid, titleid):\n",
        "    webget = rq.get(url, verify=False)\n",
        "    htmltext = bs(webget.text, 'html.parser').select(htmlid)[0]\n",
        "    \n",
        "    dateinfo = htmltext.find_all('dd')\n",
        "    titleinfo = htmltext.find_all('dt')\n",
        "    argddt = pds.DataFrame(columns=['TITLE', 'APPLICABLE PERIOD'])\n",
        "    dateresult = []\n",
        "    replacement = ['프로그램기간', '\\r', '\\n', '\\t', '접수', '예정', '완료']\n",
        "    \n",
        "    if len(dateinfo) == len(titleinfo):\n",
        "        for i in range(len(titleinfo)):\n",
        "            titletext = titleinfo[i].select(titleid)[0].get_text(strip=True)\n",
        "            datetext = dateinfo[i].select(dateid)[0].get_text(strip=True)\n",
        "            for w in replacement:\n",
        "                datetext = datetext.replace(w, '')\n",
        "            argddt.loc[i] = (titletext, datetext)\n",
        "        return(argddt)\n",
        "    else:\n",
        "        print('SOME OF ID CONDITIONS ARE WRONG - CHECK THE HTML TEXT AGAIN')\n",
        "        print(htmltext)\n",
        "        \n",
        "def updatecheck(newdt, url):\n",
        "    olddt = pds.read_csv('pastresult.csv')\n",
        "    if newdt.iloc[0][0] == olddt.iloc[0][0]:\n",
        "        print('NO UPDATE')\n",
        "        for i in range(3):\n",
        "            print('PRGM.: %s // PER. : %s' %(newdt.iloc[i][0], newdt.iloc[i][1]))            \n",
        "    else:\n",
        "        print('NEW ARTICLE(S) POSTED')\n",
        "        for i in range(len(newdt)):\n",
        "            extcheck = 0\n",
        "            for j in range(len(olddt)):\n",
        "                if newdt.iloc[i][0] == olddt.iloc[j][0]:\n",
        "                    extcheck = 1\n",
        "                    break\n",
        "            if extcheck == 0:\n",
        "                print('PRGM.: %s // PER. : %s' %(newdt.iloc[i][0], newdt.iloc[i][1]))\n",
        "        newdt.to_csv('pastresult.csv', index=False)\n",
        "        \n",
        "        webopen = input('DO YOU WANT TO OPEN THE WEBSITE TO CHECK? (Y/N) : ').lower()\n",
        "        if webopen == 'y':\n",
        "            wb.open(url)\n",
        "        else:\n",
        "            pass\n",
        "        \n",
        "\n",
        "    \n",
        "result = articlecrawling(noticeboardurl, noticeboardid, articledateid, articletitleid)\n",
        "if os.path.isfile('pastresult.csv') == False:\n",
        "    for i in range(len(result)):\n",
        "        print('PRGM.: %s // PER. : %s' %(result.iloc[i][0], result.iloc[i][1]))\n",
        "    result.to_csv('pastresult.csv', index=False)\n",
        "else:\n",
        "    updatecheck(result, noticeboardurl)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "PRGM.: 다문화가족 청소년기 부모교육 \"제대로 자녀코칭\" 참여자 모집 // PER. : 2020-10-21~2020-10-31\n",
            "PRGM.: 문화다양성 이해교육 다문화공연 &apos무지개 물고기&apos 참여자 모집 // PER. : 2020-10-24~2020-10-24\n",
            "PRGM.: 랜선 행복한밥상 - 우리가족 생일상 차리기편 참여자 모집 // PER. : 2020-10-16~2020-10-16\n",
            "PRGM.: 용인시 다문화가족지원센터 10월프로그램 // PER. : 2020-10-01~2020-10-31\n",
            "PRGM.: 한국문화와 &apos나&apos를 알아보는 &apos비긴어게인_코리아&apos  참여자 모집 // PER. : 2020-10-12~2020-10-28\n",
            "PRGM.: <다문화부부학교-“부부의 맛! 우리 사랑은 무슨 맛?”> 참여부부 모집 // PER. : 2020-10-31~2020-11-07\n",
            "PRGM.: 온라인 취업교육 - 마크라메지도사 2급 자격증 취득하기! // PER. : 2020-09-22~2020-12-11\n",
            "PRGM.: <유치원, 어린이집, 초등학교로 배달되는 세계문화체험 키트!-“多문화 딜리버리”> // PER. : 2020-10-12~2020-10-31\n",
            "PRGM.: <집으로 배달되는 세계문화체험 키트!-“多문화 딜리버리”> // PER. : 2020-10-12~2020-10-31\n",
            "PRGM.: 사회통합프로그램 5단계 신청 // PER. : 2020-09-12~2020-12-05\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}